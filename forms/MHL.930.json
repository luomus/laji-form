{
  "schema":{
    "type":"object",
    "properties":{
      "owner":{
        "type":"string",
        "title":"Owner of record"
      },
      "attachments":{
        "type":"array",
        "items":{
          "type":"string"
        },
        "title":"Attachments"
      },
      "status":{
        "type":"string",
        "oneOf":[
          {
            "const":"",
            "title":""
          },
          {
            "const":"HRX.statusInProcess",
            "title":"In process"
          },
          {
            "const":"HRX.statusOutstanding",
            "title":"Outstanding"
          },
          {
            "const":"HRX.statusClosed",
            "title":"Closed"
          },
          {
            "const":"HRX.statusOnLoan",
            "title":"On loan"
          }
        ],
        "title":"Transaction status"
      },
      "type":{
        "type":"string",
        "oneOf":[
          {
            "const":"HRX.typeLoanIncoming",
            "title":"Loan, incoming"
          },
          {
            "const":"HRX.typeLoanOutgoing",
            "title":"Loan, outgoing"
          },
          {
            "const":"HRX.typeGiftIncoming",
            "title":"Gift, incoming"
          },
          {
            "const":"HRX.typeGiftOutgoing",
            "title":"Gift, outgoing"
          },
          {
            "const":"HRX.typeExchangeIncoming",
            "title":"Exchange, incoming"
          },
          {
            "const":"HRX.typeExchangeOutgoing",
            "title":"Exchange, outgoing"
          },
          {
            "const":"HRX.typeFieldCollection",
            "title":"Field collection"
          },
          {
            "const":"HRX.typeImportNotice",
            "title":"Import notice only (maahantuonti-ilmoitus)"
          },
          {
            "const":"HRX.typeABSNegotiations",
            "title":"ABS negotiations"
          },
          {
            "const":"HRX.typeVirtualLoanOutgoing",
            "title":"Virtual loan, outgoing"
          },
          {
            "const":"HRX.typeDeaccession",
            "title":"Deaccession / Discarding"
          }
        ],
        "title":"Transaction type"
      },
      "requestReceived":{
        "type":"string",
        "title":"Date requested"
      },
      "incomingReceived":{
        "type":"string",
        "title":"Date received"
      },
      "incomingReturned":{
        "type":"string",
        "title":"Date returned"
      },
      "material":{
        "type":"string",
        "title":"Material description"
      },
      "harmonizedSystemCode":{
        "type":"string",
        "title":"HS Code for customs"
      },
      "externalID":{
        "type":"string",
        "title":"Transaction ID by counterparty"
      },
      "publicRemarks":{
        "type":"string",
        "title":"Public remarks"
      },
      "internalRemarks":{
        "type":"string",
        "title":"Internal remarks"
      },
      "legacyID":{
        "type":"string",
        "title":"Old transaction number"
      },
      "transportMethod":{
        "type":"string",
        "oneOf":[
          {
            "const":"",
            "title":""
          },
          {
            "const":"HRX.transportMethodPriority",
            "title":"Priority mail"
          },
          {
            "const":"HRX.transportMethodEconomy",
            "title":"Economy mail"
          },
          {
            "const":"HRX.transportMethodCourier",
            "title":"Courier, see remarks"
          },
          {
            "const":"HRX.transportMethodCarried",
            "title":"Carried, see remarks"
          },
          {
            "const":"HRX.transportMethodOther",
            "title":"Other, see remarks"
          },
          {
            "const":"HRX.transportMethodImage",
            "title":"Image(s) (virtual loan)"
          }
        ],
        "title":"Sent by"
      },
      "numberOfParcels":{
        "type":"string",
        "title":"Number of parcels"
      },
      "outgoingSent":{
        "type":"string",
        "title":"Outgoing transaction sent"
      },
      "dueDate":{
        "type":"string",
        "title":"Due date"
      },
      "receiptReturned":{
        "type":"string",
        "title":"Receipt returned"
      },
      "outgoingReturned":{
        "type":"string",
        "title":"Outgoing loan returned"
      },
      "correspondentOrganization":{
        "type":"string",
        "title":"Counterparty organization"
      },
      "correspondentPerson":{
        "type":"string",
        "title":"Counterparty person/contact info"
      },
      "correspondentResearcher":{
        "type":"string",
        "title":"Receiving researcher"
      },
      "localHandler":{
        "type":"string",
        "title":"Handler"
      },
      "localHandlerEmail":{
        "type":"string",
        "title":"Handler email"
      },
      "localPerson":{
        "type":"string",
        "title":"Person responsible"
      },
      "localPersonEmail":{
        "type":"string",
        "title":"Person responsible email"
      },
      "localResearcher":{
        "type":"string",
        "title":"Receiving researcher"
      },
      "collectionID":{
        "type":"string",
        "title":"Collection"
      },
      "geneticResourceAcquisitionDate":{
        "type":"string",
        "title":"Acquisition date"
      },
      "geneticResourceAcquisitionCountry":{
        "type":"string",
        "title":"Acquisition country"
      },
      "underNagoya":{
        "type":"boolean",
        "title":"Does Nagoya protocol apply?"
      },
      "availableForGeneticResearch":{
        "type":"string",
        "oneOf":[
          {
            "const":"",
            "title":""
          },
          {
            "const":"HRX.availableForGeneticResearchYes",
            "title":"Yes, freely"
          },
          {
            "const":"HRX.availableForGeneticResearchWithRestrictions",
            "title":"Yes, with restrictions"
          },
          {
            "const":"HRX.availableForGeneticResearchNo",
            "title":"No"
          }
        ],
        "title":"Is genetic research allowed on the genetic resource(s)?"
      },
      "geneticResourceRightsAndObligations":{
        "type":"string",
        "title":"Rights and obligations"
      },
      "geneticResourceType":{
        "type":"string",
        "oneOf":[
          {
            "const":"",
            "title":""
          },
          {
            "const":"HRX.geneticResourceTypeAnimal",
            "title":"Animal"
          },
          {
            "const":"HRX.geneticResourceTypePlant",
            "title":"Plant"
          },
          {
            "const":"HRX.geneticResourceTypeFungus",
            "title":"Fungus"
          },
          {
            "const":"HRX.geneticResourceTypeMicrobe",
            "title":"Microbe"
          },
          {
            "const":"HRX.geneticResourceTypeSoil",
            "title":"Soil"
          },
          {
            "const":"HRX.geneticResourceTypeAqua",
            "title":"Aqua"
          }
        ],
        "title":"Type of resource"
      },
      "hasIRCC":{
        "type":"boolean",
        "title":"Do you have IRCC number?",
        "default":false
      },
      "IRCC":{
        "type":"string",
        "title":"IRCC number"
      },
      "resourceImported":{
        "type":"string",
        "oneOf":[
          {
            "const":"",
            "title":""
          },
          {
            "const":"HRX.resourceImportedGeneticResources",
            "title":"Genetic resources"
          },
          {
            "const":"HRX.resourceImportedTraditionalKnowledge",
            "title":"Traditional knowledge"
          },
          {
            "const":"HRX.resourceImportedBoth",
            "title":"Both"
          }
        ],
        "title":"What are you importing?"
      },
      "geneticResourceDescription":{
        "type":"string",
        "title":"Description"
      },
      "geneticResourceSource":{
        "type":"string",
        "title":"Source"
      },
      "permits":{
        "type":"array",
        "items":{
          "type":"object",
          "properties":{
            "permitType":{
              "type":"string",
              "oneOf":[
                {
                  "const":"",
                  "title":""
                },
                {
                  "const":"HRA.permitTypePIC",
                  "title":"PIC"
                },
                {
                  "const":"HRA.permitTypeMAT",
                  "title":"MAT"
                },
                {
                  "const":"HRA.permitTypeMTA",
                  "title":"MTA"
                },
                {
                  "const":"HRA.permitCollectingPermit",
                  "title":"Collecting permit"
                },
                {
                  "const":"HRA.permitTypeExportPermit",
                  "title":"Export permit"
                },
                {
                  "const":"HRA.permitTypeOther",
                  "title":"Other"
                },
                {
                  "const":"HRA.permitTypeMemorandumOfUnderstanding",
                  "title":"Memorandum of Understanding (MOU)"
                }
              ],
              "title":"Permit type"
            },
            "permitStatus":{
              "type":"string",
              "oneOf":[
                {
                  "const":"",
                  "title":""
                },
                {
                  "const":"HRA.permitStatusAvailable",
                  "title":"Available"
                },
                {
                  "const":"HRA.permitStatusNotRequired",
                  "title":"Not required"
                }
              ],
              "title":"Permit status"
            },
            "permitFile":{
              "type":"string",
              "title":"File"
            },
            "permitStartDate":{
              "type":"string",
              "title":"Start date"
            },
            "permitEndDate":{
              "type":"string",
              "title":"End date"
            },
            "permitNotes":{
              "type":"string",
              "title":"Notes"
            }
          },
          "required":[

          ]
        },
        "title":"Permits"
      },
      "transactionEvents":{
        "type":"array",
        "items":{
          "type":"object",
          "properties":{
            "eventType":{
              "type":"string",
              "oneOf":[
                {
                  "const":"HRX.eventTypeReturn",
                  "title":"Returned specimens"
                },
                {
                  "const":"HRX.eventTypeAddition",
                  "title":"Added specimens"
                }
              ],
              "title":"Event type"
            },
            "eventDate":{
              "type":"string",
              "title":"Date"
            },
            "eventHandler":{
              "type":"string",
              "title":"Handler"
            },
            "eventNotes":{
              "type":"string",
              "title":"Notes"
            }
          },
          "required":[
            "eventType",
            "eventDate",
            "eventHandler",
            "eventNotes"
          ]
        },
        "title":"Transaction events"
      },
      "awayIDs":{
        "type":"array",
        "items":{
          "type":"string"
        },
        "title":"Included in/On loan IDs"
      },
      "returnedIDs":{
        "type":"array",
        "items":{
          "type":"string"
        },
        "title":"Returned IDs"
      },
      "missingIDs":{
        "type":"array",
        "items":{
          "type":"string"
        },
        "title":"Missing IDs"
      },
      "awayCount":{
        "type":"integer",
        "minimum":0,
        "title":"Included in/On loan count"
      },
      "returnedCount":{
        "type":"integer",
        "minimum":0,
        "title":"Returned count"
      },
      "missingCount":{
        "type":"integer",
        "minimum":0,
        "title":"Missing count"
      }
    },
    "required":[
      "owner",
      "type"
    ]
  },
  "excludeFromCopy":[
    "$.geneticResourceAcquisitionDate",
    "$.geneticResourceAcquisitionCountry",
    "$.underNagoya",
    "$.availableForGeneticResearch",
    "$.geneticResourceRightsAndObligations",
    "$.geneticResourceType",
    "$.hasIRCC",
    "$.IRCC",
    "$.resourceImported",
    "$.geneticResourceDescription",
    "$.geneticResourceSource",
    "$.permits",
    "$.transactionEvents",
    "$.awayIDs",
    "$.returnedIDs",
    "$.missingIDs",
    "$.awayCount",
    "$.returnedCount",
    "$.missingCount"
  ],
  "name":"Kotka - Transaction",
  "language":"en",
  "title":"Kotka - Transaction",
  "options":{
    "useSchemaCommentsAsHelpTexts":true,
    "allowTemplate":true,
    "strict":false
  },
  "uiSchema":{
    "owner":{
      "ui:help":"Team or organisation that owns the record and can edit it."
    },
    "status":{
      "ui:help":"Whether the transaction is closed, outstanding or in process."
    },
    "type":{
      "ui:help":"What kind of transaction this is."
    },
    "requestReceived":{
      "ui:help":"When loan request was received here."
    },
    "incomingReceived":{
      "ui:help":"Date when incoming transaction was received."
    },
    "incomingReturned":{
      "ui:help":"Date when the incoming loan was returned to the sender."
    },
    "material":{
      "ui:help":"Description of the material included in this transaction."
    },
    "externalID":{
      "ui:help":"Sender's ID for the transaction."
    },
    "publicRemarks":{
      "ui:help":"Remarks that are shown to both parties of the transaction."
    },
    "internalRemarks":{
      "ui:help":"Private remarks that are shown only in Kotka and not to the corresponding organisation."
    },
    "legacyID":{
      "ui:help":"Loan/transaction number used in paper loan catalogs or old software (e.g. Curator)"
    },
    "transportMethod":{
      "ui:help":"Means of sending, mail, courier etc."
    },
    "numberOfParcels":{
      "ui:help":"In how many parcels was the transaction sent/carried."
    },
    "outgoingSent":{
      "ui:help":"When the transaction was sent out from us"
    },
    "dueDate":{
      "ui:help":"Date when the loan needs to be returned."
    },
    "receiptReturned":{
      "ui:help":"When signed loan receipt was received from the loanee"
    },
    "outgoingReturned":{
      "ui:help":"Date when the outgoing loan was returned to us"
    },
    "correspondentOrganization":{
      "ui:help":"Select the correspondent organization from a list. If not found on the list, you need to add the new organization first."
    },
    "correspondentPerson":{
      "ui:help":"Name of the corresponding person. If the transaction goes to a private person, write their postal address here."
    },
    "correspondentResearcher":{
      "ui:help":"Receicing researcher in the correspondent organisation for outgoing transactions."
    },
    "localHandler":{
      "ui:help":"Person handling the transaction at local Kotka institution."
    },
    "localPerson":{
      "ui:help":"Person responsible for the transaction in our museum/local Kotka institution"
    },
    "localPersonEmail":{
      "ui:help":"Contact email for the person responsible in our museum."
    },
    "localResearcher":{
      "ui:help":"For incoming loans, name of the researcher receiving the loan at our local institution."
    },
    "collectionID":{
      "ui:help":"For statistical purposes. The collection where the transaction is directed to. Record transactions directed to different collections as separate transactions if you use this field."
    },
    "geneticResourceAcquisitionDate":{
      "ui:help":"Date when the genetic resource or traditional knowledge was aqcuired."
    },
    "geneticResourceAcquisitionCountry":{
      "ui:help":"Country where the genetic resource or traditional knowledge was acquired from, provider country, country of origin. List of countries in Kotka is based on ISO 3166 Country Codes -standard and may differ from the country list in ABSCH."
    },
    "underNagoya":{
      "ui:help":"Is it e.g. non-human genetic material that is going to be used for genetic research as is defined by the protocol?"
    },
    "availableForGeneticResearch":{
      "ui:help":"If you choose \"Yes, with restrictions\", explain the restrictions in the following field \"Rights and obligations\"."
    },
    "geneticResourceRightsAndObligations":{
      "ui:help":"Presence or absence of rights and obligations relating to access and benefit sharing, including rights and obligations regarding subsequent applications and commercialization. Instruction source EU DECLARE user manual and QA."
    },
    "geneticResourceType":{
      "ui:help":"Choose the type of the genetic resource for statistical and reporting purposes."
    },
    "hasIRCC":{
      "ui:help":"Whether the resource has an IRCC number or not. If not, more information needs to be filled in."
    },
    "IRCC":{
      "ui:help":"Internationally Recognized Certificate of Compliance. Kotka checks from the ABS Clearing House that the entered IRCC number exists and is valid."
    },
    "resourceImported":{
      "ui:help":"Are you importing genetic resources, traditional knowledge associated to genetic resources or both?"
    },
    "geneticResourceDescription":{
      "ui:help":"Description of the genetic resource or traditional knowledge (possible identifiers, taxa, number of specimens, region etc.). Instruction source EU DECLARE User manual and QA."
    },
    "geneticResourceSource":{
      "ui:help":"Person or legal entity from whom the user obtained the genetic resources directly, i.e. the previous actor in the value chain. Often a museum or other organization. If a genetic resource is obtained directly from the provider country, the name of the country should be provided. Instruction source EU DECLARE User manual and QA."
    },
    "ui:functions":[
      {
        "ui:field":"ScopeField",
        "ui:options":{
          "fields":[
            "owner",
            "attachments",
            "status",
            "type"
          ],
          "fieldScopes":{
            "type":{
              "+":{
                "fields":[
                  "requestReceived",
                  "incomingReceived",
                  "incomingReturned",
                  "material",
                  "harmonizedSystemCode",
                  "externalID",
                  "publicRemarks",
                  "internalRemarks",
                  "legacyID",
                  "transportMethod",
                  "numberOfParcels",
                  "outgoingSent",
                  "dueDate",
                  "receiptReturned",
                  "outgoingReturned",
                  "correspondentOrganization",
                  "correspondentPerson",
                  "correspondentResearcher",
                  "localHandler",
                  "localHandlerEmail",
                  "localPerson",
                  "localPersonEmail",
                  "localResearcher",
                  "collectionID",
                  "geneticResourceAcquisitionDate",
                  "geneticResourceAcquisitionCountry",
                  "underNagoya",
                  "availableForGeneticResearch",
                  "geneticResourceRightsAndObligations",
                  "geneticResourceType",
                  "hasIRCC",
                  "IRCC",
                  "resourceImported",
                  "geneticResourceDescription",
                  "geneticResourceSource",
                  "permits",
                  "transactionEvents",
                  "awayCount",
                  "returnedCount",
                  "missingCount",
                  "awayIDs",
                  "returnedIDs",
                  "missingIDs"
                ],
                "uiSchema":{
                  "correspondent":{
                    "ui:field":""
                  },
                  "local":{
                    "ui:field":""
                  },
                  "nagoyaWrapper":{
                    "ui:field":""
                  },
                  "transactionEvents":{
                    "ui:field":""
                  },
                  "specimens":{
                    "ui:field":""
                  }
                }
              },
              "HRX.typeLoanIncoming":{
                "excludeFields":[
                  "requestReceived",
                  "outgoingSent",
                  "outgoingReturned",
                  "correspondentResearcher",
                  "collectionID"
                ],
                "uiSchema":{
                  "incomingReceived":{
                    "ui:required":true
                  },
                  "correspondentOrganization":{
                    "ui:required":true
                  },
                  "awayIDs":{
                    "ui:title":"On loan IDs"
                  },
                  "awayCount":{
                    "ui:title":"On loan count"
                  },
                  "specimens":{
                    "totalAwayCount":{
                      "ui:title":"On loan"
                    },
                    "totalReturnedCount":{
                      "ui:widget":"PlainTextWidget"
                    }
                  },
                  "transactionEvents":{
                    "items":{
                      "eventType":{
                        "ui:options":{
                          "filter":[

                          ]
                        }
                      }
                    }
                  },
                  "specimenIDs":{
                    "ui:options":{
                      "buttons":[
                        {
                          "operation":"moveAll",
                          "fromField":"awayIDs",
                          "toField":"returnedIDs",
                          "label":"Mark all as returned",
                          "className":"mt-1 mb-3"
                        },
                        {
                          "operation":"move",
                          "toField":"awayIDs",
                          "label":"Mark as on loan"
                        },
                        {
                          "operation":"move",
                          "toField":"returnedIDs",
                          "label":"Mark as returned"
                        },
                        {
                          "operation":"move",
                          "toField":"missingIDs",
                          "label":"Mark as missing",
                          "className":"mb-3"
                        },
                        {
                          "operation":"delete",
                          "label":"Delete"
                        }
                      ]
                    }
                  }
                }
              },
              "HRX.typeLoanOutgoing":{
                "excludeFields":[
                  "incomingReceived",
                  "incomingReturned",
                  "localResearcher"
                ],
                "uiSchema":{
                  "correspondentOrganization":{
                    "ui:required":true
                  },
                  "outgoingSent":{
                    "ui:required":true
                  },
                  "awayIDs":{
                    "ui:title":"On loan IDs"
                  },
                  "awayCount":{
                    "ui:title":"On loan count"
                  },
                  "specimens":{
                    "totalAwayCount":{
                      "ui:title":"On loan"
                    },
                    "totalReturnedCount":{
                      "ui:widget":"PlainTextWidget"
                    }
                  },
                  "transactionEvents":{
                    "items":{
                      "eventType":{
                        "ui:options":{
                          "filter":[

                          ]
                        }
                      }
                    }
                  },
                  "specimenIDs":{
                    "ui:options":{
                      "buttons":[
                        {
                          "operation":"moveAll",
                          "fromField":"awayIDs",
                          "toField":"returnedIDs",
                          "label":"Mark all as returned",
                          "className":"mt-1 mb-3"
                        },
                        {
                          "operation":"move",
                          "toField":"awayIDs",
                          "label":"Mark as on loan"
                        },
                        {
                          "operation":"move",
                          "toField":"returnedIDs",
                          "label":"Mark as returned"
                        },
                        {
                          "operation":"move",
                          "toField":"missingIDs",
                          "label":"Mark as missing",
                          "className":"mb-3"
                        },
                        {
                          "operation":"delete",
                          "label":"Delete"
                        }
                      ]
                    }
                  }
                }
              },
              "HRX.typeGiftIncoming":{
                "excludeFields":[
                  "requestReceived",
                  "incomingReturned",
                  "outgoingSent",
                  "outgoingReturned",
                  "correspondentResearcher",
                  "localResearcher",
                  "returnedCount",
                  "returnedIDs",
                  "dueDate"
                ],
                "uiSchema":{
                  "incomingReceived":{
                    "ui:required":true
                  },
                  "correspondentOrganization":{
                    "ui:required":true
                  }
                }
              },
              "HRX.typeGiftOutgoing":{
                "excludeFields":[
                  "incomingReceived",
                  "incomingReturned",
                  "outgoingReturned",
                  "localResearcher",
                  "returnedCount",
                  "returnedIDs",
                  "dueDate",
                  "requestReceived"
                ],
                "uiSchema":{
                  "outgoingSent":{
                    "ui:required":true
                  },
                  "correspondentOrganization":{
                    "ui:required":true
                  }
                }
              },
              "HRX.typeExchangeIncoming":{
                "excludeFields":[
                  "requestReceived",
                  "incomingReturned",
                  "outgoingSent",
                  "outgoingReturned",
                  "correspondentResearcher",
                  "localResearcher",
                  "returnedCount",
                  "returnedIDs",
                  "dueDate"
                ],
                "uiSchema":{
                  "incomingReceived":{
                    "ui:required":true
                  },
                  "correspondentOrganization":{
                    "ui:required":true
                  }
                }
              },
              "HRX.typeExchangeOutgoing":{
                "excludeFields":[
                  "incomingReceived",
                  "incomingReturned",
                  "outgoingReturned",
                  "localResearcher",
                  "returnedCount",
                  "returnedIDs",
                  "dueDate",
                  "requestReceived"
                ],
                "uiSchema":{
                  "correspondentOrganization":{
                    "ui:required":true
                  },
                  "outgoingSent":{
                    "ui:required":true
                  }
                }
              },
              "HRX.typeVirtualLoanOutgoing":{
                "excludeFields":[
                  "incomingReceived",
                  "incomingReturned",
                  "outgoingReturned",
                  "numberOfParcels",
                  "localResearcher",
                  "returnedCount",
                  "returnedIDs",
                  "missingCount",
                  "missingIDs",
                  "dueDate"
                ],
                "uiSchema":{
                  "requestReceived":{
                    "ui:required":true
                  },
                  "correspondentOrganization":{
                    "ui:required":true
                  },
                  "outgoingSent":{
                    "ui:required":true
                  },
                  "specimens":{
                    "totalMissingCount":{
                      "ui:widget":"HiddenWidget"
                    }
                  },
                  "specimenIDs":{
                    "ui:options":{
                      "buttons":[
                        {
                          "operation":"delete",
                          "label":"Delete",
                          "className":"mt-4"
                        }
                      ]
                    }
                  }
                }
              },
              "HRX.typeFieldCollection":{
                "excludeFields":[
                  "requestReceived",
                  "incomingReturned",
                  "outgoingSent",
                  "outgoingReturned",
                  "externalID",
                  "dueDate",
                  "receiptReturned",
                  "correspondentOrganization",
                  "returnedCount",
                  "returnedIDs"
                ]
              },
              "HRX.typeImportNotice":{
                "excludeFields":[
                  "requestReceived",
                  "incomingReturned",
                  "outgoingSent",
                  "outgoingReturned",
                  "externalID",
                  "transportMethod",
                  "numberOfParcels",
                  "dueDate",
                  "receiptReturned",
                  "returnedCount",
                  "returnedIDs"
                ],
                "uiSchema":{
                  "correspondentOrganization":{
                    "ui:required":true
                  }
                }
              },
              "HRX.typeABSNegotiations":{
                "excludeFields":[
                  "requestReceived",
                  "incomingReturned",
                  "outgoingSent",
                  "outgoingReturned",
                  "transportMethod",
                  "numberOfParcels",
                  "dueDate",
                  "receiptReturned",
                  "returnedCount",
                  "returnedIDs"
                ],
                "uiSchema":{
                  "correspondentOrganization":{
                    "ui:required":true
                  }
                }
              },
              "HRX.typeDeaccession":{
                "excludeFields":[
                  "incomingReceived",
                  "incomingReturned",
                  "publicRemarks",
                  "outgoingReturned",
                  "transportMethod",
                  "numberOfParcels",
                  "dueDate",
                  "receiptReturned",
                  "localResearcher",
                  "returnedCount",
                  "returnedIDs",
                  "missingCount",
                  "missingIDs"
                ],
                "uiSchema":{
                  "outgoingSent":{
                    "ui:required":true
                  },
                  "correspondent":{
                    "ui:field":"HiddenField"
                  },
                  "nagoyaWrapper":{
                    "ui:field":"HiddenField"
                  },
                  "specimens":{
                    "totalMissingCount":{
                      "ui:widget":"HiddenWidget"
                    }
                  },
                  "specimenIDs":{
                    "ui:options":{
                      "buttons":[
                        {
                          "operation":"delete",
                          "label":"Delete",
                          "className":"mt-4"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    ],
    "ui:field":"NestField",
    "ui:options":{
      "nests":{
        "generalFields":{
          "title":"",
          "fields":[
            "owner",
            "attachments"
          ]
        },
        "transactionFields":{
          "title":"",
          "fields":[
            "status",
            "type",
            "requestReceived",
            "incomingReceived",
            "incomingReturned",
            "material",
            "harmonizedSystemCode",
            "externalID",
            "publicRemarks",
            "internalRemarks",
            "legacyID",
            "transportMethod",
            "numberOfParcels",
            "outgoingSent",
            "dueDate",
            "receiptReturned",
            "outgoingReturned"
          ]
        },
        "transaction":{
          "title":"Transaction",
          "fields":[
            "transactionFields"
          ]
        },
        "correspondentFields":{
          "title":"",
          "fields":[
            "correspondentOrganization",
            "correspondentPerson",
            "correspondentResearcher"
          ]
        },
        "correspondent":{
          "title":"Counterparty",
          "fields":[
            "correspondentFields"
          ]
        },
        "localFields":{
          "title":"",
          "fields":[
            "localHandler",
            "localHandlerEmail",
            "localPerson",
            "localPersonEmail",
            "localResearcher",
            "collectionID"
          ]
        },
        "local":{
          "title":"Our museum",
          "fields":[
            "localFields"
          ]
        },
        "nagoyaFields":{
          "title":"",
          "fields":[
            "geneticResourceAcquisitionDate",
            "geneticResourceAcquisitionCountry",
            "underNagoya",
            "availableForGeneticResearch",
            "geneticResourceRightsAndObligations",
            "geneticResourceType",
            "hasIRCC",
            "IRCC",
            "resourceImported",
            "geneticResourceDescription",
            "geneticResourceSource"
          ]
        },
        "nagoyaWrapper":{
          "title":"Permits (Nagoya protocol etc.)",
          "fields":[
            "nagoyaFields",
            "permits"
          ]
        },
        "specimenIDs":{
          "title":"Specimens with IDs",
          "fields":[
            "awayIDs",
            "returnedIDs",
            "missingIDs"
          ]
        },
        "specimenCounts":{
          "title":"Specimens without IDs",
          "fields":[
            "awayCount",
            "returnedCount",
            "missingCount"
          ]
        },
        "specimens":{
          "title":"",
          "fields":[
            "specimenIDs",
            "specimenCounts"
          ]
        }
      }
    },
    "ui:order":[
      "*",
      "transactionEvents",
      "specimens"
    ],
    "generalFields":{
      "ui:grid":{
        "lg":6,
        "md":7,
        "sm":8,
        "xs":12,
        "rows":[
          [
            "owner"
          ],
          [
            "attachments"
          ]
        ]
      },
      "owner":{
        "ui:widget":"AutosuggestWidget",
        "ui:options":{
          "autosuggestField":"organization",
          "allowNonsuggestedValue":true,
          "suggestionReceive":"key",
          "displayValidationState":true,
          "minFetchLength":1,
          "query":{
            "onlyOwnOrganizations":true
          }
        }
      },
      "attachments":{
        "ui:functions":{
          "ui:field":"ConditionalUiSchemaField",
          "ui:options":{
            "cases":{
              "rules":[
                {
                  "rule":"isEdit",
                  "complement":true
                }
              ],
              "operations":{
                "type":"merge",
                "uiSchema":{
                  "ui:field":"HiddenField"
                }
              }
            }
          }
        },
        "ui:field":"PdfArrayField"
      }
    },
    "transaction":{
      "ui:grid":{
        "lg":6,
        "md":7,
        "sm":8,
        "xs":12
      },
      "transactionFields":{
        "requestReceived":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        },
        "incomingReceived":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        },
        "incomingReturned":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        },
        "material":{
          "ui:widget":"textarea"
        },
        "publicRemarks":{
          "ui:widget":"textarea"
        },
        "internalRemarks":{
          "ui:widget":"textarea"
        },
        "outgoingSent":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        },
        "dueDate":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY",
            "showButtons":{
              "plusSixMonths":{
                "path":"/outgoingSent"
              },
              "plusYear":{
                "path":"/outgoingSent"
              }
            }
          }
        },
        "receiptReturned":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        },
        "outgoingReturned":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        }
      }
    },
    "correspondent":{
      "ui:field":"HiddenField",
      "ui:grid":{
        "lg":6,
        "md":7,
        "sm":8,
        "xs":12
      },
      "correspondentFields":{
        "correspondentOrganization":{
          "ui:classNames":"correspondent-organization",
          "ui:widget":"AutosuggestWidget",
          "ui:options":{
            "autosuggestField":"organization",
            "allowNonsuggestedValue":true,
            "suggestionReceive":"key",
            "displayValidationState":true,
            "minFetchLength":1
          }
        },
        "correspondentPerson":{
          "ui:widget":"textarea"
        }
      }
    },
    "local":{
      "ui:field":"HiddenField",
      "ui:grid":{
        "lg":6,
        "md":7,
        "sm":8,
        "xs":12
      },
      "localFields":{
        "ui:functions":[
          {
            "ui:field":"InputWithDefaultValueButtonField",
            "ui:options":{
              "buttonLabel":"me",
              "buttonField":"localHandler",
              "valueFields":[
                {
                  "field":"localHandler",
                  "contextFieldForDefaultValue":"userName"
                },
                {
                  "field":"localHandlerEmail",
                  "contextFieldForDefaultValue":"userEmail"
                }
              ]
            }
          },
          {
            "ui:field":"InputWithDefaultValueButtonField",
            "ui:options":{
              "buttonLabel":"me",
              "buttonField":"localPerson",
              "valueFields":[
                {
                  "field":"localPerson",
                  "contextFieldForDefaultValue":"userName"
                },
                {
                  "field":"localPersonEmail",
                  "contextFieldForDefaultValue":"userEmail"
                }
              ]
            }
          }
        ],
        "collectionID":{
          "ui:widget":"AutosuggestWidget",
          "ui:options":{
            "autosuggestField":"collection",
            "allowNonsuggestedValue":true,
            "suggestionReceive":"key",
            "displayValidationState":true,
            "minFetchLength":1
          }
        }
      }
    },
    "nagoyaWrapper":{
      "ui:field":"HiddenField",
      "ui:grid":{
        "lg":{
          "permits":12,
          "*":6
        },
        "md":{
          "permits":12,
          "*":7
        },
        "sm":{
          "permits":12,
          "*":8
        },
        "xs":12,
        "rows":[
          [
            "nagoyaFields"
          ],
          [
            "permits"
          ]
        ]
      },
      "nagoyaFields":{
        "ui:classNames":"nagoya-fields",
        "ui:functions":[
          {
            "ui:field":"ScopeField",
            "ui:options":{
              "fields":[
                "geneticResourceAcquisitionDate",
                "geneticResourceAcquisitionCountry",
                "underNagoya",
                "availableForGeneticResearch",
                "geneticResourceRightsAndObligations",
                "geneticResourceType",
                "hasIRCC",
                "resourceImported",
                "geneticResourceDescription",
                "geneticResourceSource"
              ],
              "fieldScopes":{
                "hasIRCC":{
                  "true":{
                    "fields":[
                      "IRCC"
                    ],
                    "excludeFields":[
                      "resourceImported",
                      "geneticResourceDescription",
                      "geneticResourceSource"
                    ]
                  }
                }
              }
            }
          }
        ],
        "geneticResourceAcquisitionDate":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        },
        "geneticResourceRightsAndObligations":{
          "ui:widget":"textarea"
        },
        "hasIRCC":{
          "ui:options":{
            "allowUndefined":false
          }
        },
        "geneticResourceDescription":{
          "ui:widget":"textarea"
        }
      },
      "permits":{
        "items":{
          "ui:classNames":"card card-body bg-light",
          "ui:order":[
            "permitFile",
            "*"
          ],
          "ui:grid":{
            "lg":{
              "permitFile":12,
              "permitNotes":12,
              "*":3
            },
            "md":{
              "permitFile":12,
              "permitNotes":12,
              "*":3
            },
            "sm":12,
            "xs":12
          },
          "permitFile":{
            "ui:functions":[
              {
                "ui:field":"AsArrayField"
              },
              {
                "ui:field":"ConditionalUiSchemaField",
                "ui:options":{
                  "cases":{
                    "rules":[
                      {
                        "rule":"isEdit",
                        "complement":true
                      }
                    ],
                    "operations":{
                      "type":"merge",
                      "uiSchema":{
                        "ui:field":"HiddenField"
                      }
                    }
                  }
                }
              }
            ],
            "ui:field":"PdfArrayField"
          },
          "permitStartDate":{
            "ui:widget":"DateWidget",
            "ui:options":{
              "dateFormat":"DD.MM.YYYY"
            }
          },
          "permitEndDate":{
            "ui:widget":"DateWidget",
            "ui:options":{
              "dateFormat":"DD.MM.YYYY"
            }
          }
        }
      }
    },
    "transactionEvents":{
      "ui:field":"HiddenField",
      "ui:options":{
        "confirmDelete":true
      },
      "items":{
        "ui:classNames":"card card-body bg-light",
        "ui:grid":{
          "lg":{
            "eventType":6,
            "eventHandler":6,
            "*":12
          },
          "md":{
            "eventType":6,
            "eventHandler":6,
            "*":12
          },
          "sm":12,
          "xs":12
        },
        "eventType":{
          "ui:options":{
            "filter":[
              "HRX.eventTypeReturn"
            ]
          }
        },
        "eventDate":{
          "ui:widget":"DateWidget",
          "ui:options":{
            "dateFormat":"DD.MM.YYYY"
          }
        },
        "eventHandler":{
          "ui:widget":"InputWithDefaultValueButtonWidget",
          "ui:options":{
            "buttonLabel":"me",
            "contextFieldForDefaultValue":"userName"
          }
        },
        "eventNotes":{
          "ui:widget":"textarea"
        }
      }
    },
    "specimens":{
      "ui:functions":[
        {
          "ui:field":"CombinedValueDisplayField",
          "ui:options":{
            "combined":[
              {
                "firstField":"/specimenIDs/awayIDs",
                "secondField":"/specimenCounts/awayCount",
                "name":"totalAwayCount",
                "title":"Included in",
                "combineType":"totalCount"
              },
              {
                "firstField":"/specimenIDs/returnedIDs",
                "secondField":"/specimenCounts/returnedCount",
                "name":"totalReturnedCount",
                "title":"Returned",
                "combineType":"totalCount"
              },
              {
                "firstField":"/specimenIDs/missingIDs",
                "secondField":"/specimenCounts/missingCount",
                "name":"totalMissingCount",
                "title":"Missing",
                "combineType":"totalCount"
              },
              {
                "firstField":"totalAwayCount",
                "secondField":"totalReturnedCount",
                "additionalFields":[
                  "totalMissingCount"
                ],
                "name":"totalCount",
                "title":"Total",
                "combineType":"totalCount"
              }
            ]
          }
        },
        {
          "ui:field":"NestField",
          "ui:options":{
            "nests":{
              "specimenTotalCounts":{
                "title":"Total specimen counts",
                "fields":[
                  "totalAwayCount",
                  "totalReturnedCount",
                  "totalMissingCount",
                  "totalCount"
                ]
              }
            }
          }
        }
      ],
      "ui:field":"HiddenField",
      "specimenIDs":{
        "ui:classNames":"specimen-id-fields",
        "ui:field":"MultiTagArrayField",
        "ui:options":{
          "separatorKeys":[
            "Enter",
            ",",
            ";",
            " "
          ],
          "showDeleteButton":false,
          "showAsLink":true,
          "linkPrefix":"https://kotkatest.luomus.fi/view?uri=",
          "replacements":[
            {
              "searchRegexp":"^(H[0-9]{7,8})$",
              "replaceValue":"HA.$1"
            }
          ],
          "buttons":[
            {
              "operation":"move",
              "toField":"awayIDs",
              "label":"Mark as included in",
              "className":"mt-1"
            },
            {
              "operation":"move",
              "toField":"missingIDs",
              "label":"Mark as missing",
              "className":"mb-3"
            },
            {
              "operation":"delete",
              "label":"Delete"
            }
          ]
        },
        "awayIDs":{
          "ui:title":"Included in IDs"
        }
      },
      "specimenCounts":{
        "ui:grid":{
          "lg":2,
          "md":3,
          "sm":3,
          "xs":12
        },
        "awayCount":{
          "ui:title":"Included in count"
        }
      },
      "specimenTotalCounts":{
        "ui:grid":{
          "lg":2,
          "md":3,
          "sm":3,
          "xs":12
        },
        "totalAwayCount":{
          "ui:widget":"PlainTextWidget"
        },
        "totalReturnedCount":{
          "ui:widget":"HiddenWidget"
        },
        "totalMissingCount":{
          "ui:widget":"PlainTextWidget"
        },
        "totalCount":{
          "ui:widget":"PlainTextWidget"
        }
      }
    }
  },
  "context":"specimenTransaction",
  "id":"MHL.930",
  "validators":{
    "owner":{
      "format":{
        "pattern":"^MOS\\.\\d+$",
        "message":"Unknown organization"
      }
    },
    "requestReceived":{
      "crossCheck":{
        "check":"type",
        "onlyWhenCheckIn":[
          "HRX.typeVirtualLoanOutgoing"
        ],
        "message":"Required field."
      }
    },
    "incomingReceived":{
      "crossCheck":{
        "check":"type",
        "onlyWhenCheckIn":[
          "HRX.typeLoanIncoming",
          "HRX.typeGiftIncoming",
          "HRX.typeExchangeIncoming"
        ],
        "message":"Required field."
      }
    },
    "outgoingSent":{
      "crossCheck":{
        "check":"type",
        "onlyWhenCheckIn":[
          "HRX.typeLoanOutgoing",
          "HRX.typeGiftOutgoing",
          "HRX.typeExchangeOutgoing",
          "HRX.typeVirtualLoanOutgoing",
          "HRX.typeDeaccession"
        ],
        "message":"Required field."
      }
    },
    "dueDate":{
      "compareDate":{
        "isAfter":"outgoingSent",
        "message":"Date can't be earlier than the outgoing loan sent date."
      }
    },
    "receiptReturned":{
      "compareDate":{
        "isAfter":"outgoingSent",
        "message":"Date can't be earlier than the outgoing loan sent date."
      }
    },
    "outgoingReturned":{
      "compareDate":{
        "isAfter":"outgoingSent",
        "message":"Date can't be earlier than the outgoing loan sent date."
      }
    },
    "correspondentOrganization":{
      "format":{
        "pattern":"(^$)|(^MOS\\.\\d+$)",
        "message":"Unknown organization"
      },
      "crossCheck":{
        "check":"type",
        "onlyWhenCheckIn":[
          "HRX.typeLoanIncoming",
          "HRX.typeGiftIncoming",
          "HRX.typeExchangeIncoming",
          "HRX.typeLoanOutgoing",
          "HRX.typeGiftOutgoing",
          "HRX.typeExchangeOutgoing",
          "HRX.typeImportNotice",
          "HRX.typeABSNegotiations",
          "HRX.typeVirtualLoanOutgoing"
        ],
        "message":"Required field."
      }
    },
    "collectionID":{
      "format":{
        "pattern":"(^$)|(^HR\\.\\d+$)",
        "message":"Unknown collection"
      }
    },
    "geneticResourceAcquisitionDate":{
      "crossCheck":{
        "checkOptions":[
          {
            "check":"underNagoya",
            "onlyWhenCheckIn":[
              true
            ]
          },
          {
            "check":"availableForGeneticResearch",
            "onlyWhenCheckIn":[
              "HRX.availableForGeneticResearchYes",
              "HRX.availableForGeneticResearchWithRestrictions"
            ]
          },
          {
            "check":"hasIRCC",
            "onlyWhenCheckIn":[
              false
            ]
          }
        ],
        "message":"Since available for genetic research and no IRCC number this must be filled."
      }
    },
    "geneticResourceAcquisitionCountry":{
      "crossCheck":{
        "checkOptions":[
          {
            "check":"underNagoya",
            "onlyWhenCheckIn":[
              true
            ]
          },
          {
            "check":"availableForGeneticResearch",
            "onlyWhenCheckIn":[
              "HRX.availableForGeneticResearchYes",
              "HRX.availableForGeneticResearchWithRestrictions"
            ]
          },
          {
            "check":"hasIRCC",
            "onlyWhenCheckIn":[
              false
            ]
          }
        ],
        "message":"Since available for genetic research and no IRCC number this must be filled."
      }
    },
    "availableForGeneticResearch":{
      "crossCheck":{
        "check":"underNagoya",
        "onlyWhenCheckIn":[
          true
        ],
        "message":"Since under Nagoya this must be filled."
      }
    },
    "geneticResourceRightsAndObligations":{
      "crossCheck":{
        "check":"availableForGeneticResearch",
        "onlyWhenCheckIn":[
          "HRX.availableForGeneticResearchWithRestrictions"
        ],
        "message":"Rights and obligations have to be filled when \"Yes, with restrictions\" is selected."
      }
    },
    "IRCC":{
      "crossCheck":{
        "checkOptions":[
          {
            "check":"underNagoya",
            "onlyWhenCheckIn":[
              true
            ]
          },
          {
            "check":"availableForGeneticResearch",
            "onlyWhenCheckIn":[
              "HRX.availableForGeneticResearchYes",
              "HRX.availableForGeneticResearchWithRestrictions"
            ]
          },
          {
            "check":"hasIRCC",
            "onlyWhenCheckIn":[
              true
            ]
          }
        ],
        "message":"Since available for genetic research you have must tell the IRCC number if you have it."
      },
      "remote":{
        "validator":"kotkaIRCCNumber"
      }
    },
    "geneticResourceDescription":{
      "crossCheck":{
        "checkOptions":[
          {
            "check":"underNagoya",
            "onlyWhenCheckIn":[
              true
            ]
          },
          {
            "check":"availableForGeneticResearch",
            "onlyWhenCheckIn":[
              "HRX.availableForGeneticResearchYes",
              "HRX.availableForGeneticResearchWithRestrictions"
            ]
          },
          {
            "check":"hasIRCC",
            "onlyWhenCheckIn":[
              false
            ]
          }
        ],
        "message":"Since available for genetic research and no IRCC number this must be filled."
      }
    },
    "geneticResourceSource":{
      "crossCheck":{
        "checkOptions":[
          {
            "check":"underNagoya",
            "onlyWhenCheckIn":[
              true
            ]
          },
          {
            "check":"availableForGeneticResearch",
            "onlyWhenCheckIn":[
              "HRX.availableForGeneticResearchYes",
              "HRX.availableForGeneticResearchWithRestrictions"
            ]
          },
          {
            "check":"hasIRCC",
            "onlyWhenCheckIn":[
              false
            ]
          }
        ],
        "message":"Since available for genetic research and no IRCC number this must be filled."
      }
    },
    "permits":{
      "valueInArray_0":{
        "value":"HRA.permitTypePIC",
        "arrayField":"permits",
        "arrayFieldKey":"permitType",
        "conditions":[
          {
            "onlyWhenField":"underNagoya",
            "onlyWhenFieldIn":[
              true
            ]
          },
          {
            "onlyWhenField":"availableForGeneticResearch",
            "onlyWhenFieldIn":[
              "HRX.availableForGeneticResearchYes",
              "HRX.availableForGeneticResearchWithRestrictions"
            ]
          },
          {
            "onlyWhenField":"hasIRCC",
            "onlyWhenFieldIn":[
              false
            ]
          }
        ],
        "message":"Since available for genetic research and no IRCC number you have to have PIC permit."
      },
      "valueInArray_1":{
        "value":"HRA.permitTypeMAT",
        "arrayField":"permits",
        "arrayFieldKey":"permitType",
        "conditions":[
          {
            "onlyWhenField":"underNagoya",
            "onlyWhenFieldIn":[
              true
            ]
          },
          {
            "onlyWhenField":"availableForGeneticResearch",
            "onlyWhenFieldIn":[
              "HRX.availableForGeneticResearchYes",
              "HRX.availableForGeneticResearchWithRestrictions"
            ]
          },
          {
            "onlyWhenField":"hasIRCC",
            "onlyWhenFieldIn":[
              false
            ]
          }
        ],
        "message":"Since available for genetic research and no IRCC number you have to have MAT permit."
      },
      "items":{
        "properties":{
          "permitFile":{
            "crossCheck":{
              "check":"permitStatus",
              "onlyWhenCheckIn":[
                "HRA.permitStatusAvailable"
              ],
              "message":"You have to upload the permit when available."
            }
          }
        }
      }
    },
    "awayIDs":{
      "arrayDuplicateCheck":{
        "checkFields":[
          "returnedIDs",
          "missingIDs"
        ],
        "message":"Duplicate specimen ID %{value}."
      }
    },
    "returnedIDs":{
      "arrayDuplicateCheck":{
        "checkFields":[
          "awayIDs",
          "missingIDs"
        ],
        "message":"Duplicate specimen ID %{value}."
      }
    },
    "missingIDs":{
      "arrayDuplicateCheck":{
        "checkFields":[
          "awayIDs",
          "returnedIDs"
        ],
        "message":"Duplicate specimen ID %{value}."
      }
    }
  },
  "warnings":{

  },
  "attributes":{
    "id":"MHL.930"
  }
}
